[tool:pytest]
# Pytest configuration for Data Centralization Platform

# Test discovery
testpaths = development/testing
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.4

# Add project root to Python path
pythonpath = . packages/shared_core packages/workflows

# Coverage settings
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=packages/shared_core
    --cov=services
    --cov=flows
    --cov-report=html:development/testing/coverage_html
    --cov-report=term-missing
    --cov-report=xml:development/testing/coverage.xml
    --cov-fail-under=80
    --durations=10

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    functional: Functional tests
    correlation: Correlation analysis tests
    llm: LLM integration tests
    api: API integration tests
    database: Database tests
    slow: Slow tests (may be skipped in CI)
    external: Tests that require external APIs
    gpu: Tests that require GPU
    docker: Tests that require Docker

# Async testing
asyncio_mode = auto

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*
    ignore::UserWarning:urllib3.*
    error::UserWarning:packages.*

# Environment variables for testing
env =
    ENVIRONMENT = testing
    DEBUG = false
    LOG_LEVEL = DEBUG
    DATABASE_URL = postgresql://test_user:test_pass@localhost:5432/test_db
    REDIS_URL = redis://localhost:6379/15
    DISABLE_EXTERNAL_APIS = true
    PYTEST_RUNNING = true

# Test timeouts
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Fixture configuration
usefixtures = pytest_configure

# JUnit XML for CI
junit_family = xunit2
junit_logging = system-out
junit_log_passing_tests = false
